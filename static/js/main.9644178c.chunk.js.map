{"version":3,"sources":["App.tsx","index.tsx"],"names":["goodsFromServer","delicious","App","state","selectedGoods","this","className","length","slice","join","CloseButton","type","classNames","onClick","setState","map","el","i","Card","bg","style","width","product_selected","includes","Body","Title","Text","Button","variant","toLowerCase","selected","prevState","filter","product","React","Component","ReactDOM","render","document","getElementById"],"mappings":"kSAOMA,EAA4B,CAChC,YACA,SACA,OACA,YACA,QACA,QACA,OACA,QACA,MACA,UAGIC,EAAqB,CAAC,aAAc,YAAa,QAAS,SAAU,aAAc,WAAY,QAAS,YAAa,QAAS,aAM7HC,E,4MACJC,MAAQ,CACNC,cAAe,CAAC,Q,4CAGlB,WAAU,IAAD,OACCA,EAAkBC,KAAKF,MAAvBC,cAER,OACE,qBAAKE,UAAU,MAAf,SACE,sBAAKA,UAAU,eAAf,UACGF,EAAcG,OAEX,qBAAID,UAAU,4BAAd,UACGF,EAAcG,OAAS,EAAvB,UACMH,EAAcI,MAAM,GAAI,GAAGC,KAAK,MADtC,gBACmDL,EAAcA,EAAcG,OAAS,GADxF,mBAEOH,EAAcK,KAAK,MAF1B,QADH,cASA,oBAAIH,UAAU,4BAAd,+BAEHF,EAAcG,OAAS,GACtB,cAACG,EAAA,EAAD,CACEC,KAAK,SACLL,UAAWM,IAAW,SAAU,gBAChCC,QAAS,WACP,EAAKC,SAAS,CAAEV,cAAe,QAKrC,oBAAGE,UAAU,uBAAb,0BAEG,IACAF,EAAcG,UAGjB,qBAAKD,UAAU,yBAAf,SACGN,EAAgBe,KAAI,SAACC,EAAIC,GAAL,OACnB,cAACC,EAAA,EAAD,CACEC,GAAIH,EAEJI,MAAO,CAAEC,MAAO,SAChBf,UAAWM,IACT,UACA,OACA,CAAEU,iBAAkBlB,EAAcmB,SAASP,KAP/C,SAUE,eAACE,EAAA,EAAKM,KAAN,WACE,cAACN,EAAA,EAAKO,MAAN,UAAaT,IAEb,eAACE,EAAA,EAAKQ,KAAN,WACGzB,EAAUgB,GACV,IACAD,KAGH,cAACW,EAAA,EAAD,CACEC,QAAQ,kBACRtB,UAAWM,IAAW,GAAD,OAChBI,EAAGa,cADa,WAEnB,SACA,CAAEC,SAAU1B,EAAcmB,SAASP,KAErCH,QAAS,WACFT,EAAcmB,SAASP,GAI1B,EAAKF,UAAS,SAAAiB,GAAS,MAAK,CAC1B3B,cAAe,YAAI2B,EAAU3B,eAAe4B,QAC1C,SAAAC,GAAO,OAAIA,IAAYjB,SAL3B,EAAKF,UAAS,SAAAiB,GAAS,MACrB,CAAE3B,cAAc,GAAD,mBAAM2B,EAAU3B,eAAhB,CAA+BY,SAVtD,SAoBIZ,EAAcmB,SAASP,GAErB,SADA,eAtCHA,iB,GA5CHkB,IAAMC,WA+FTjC,ICtHfkC,IAASC,OACP,cAAC,EAAD,IACAC,SAASC,eAAe,W","file":"static/js/main.9644178c.chunk.js","sourcesContent":["import classNames from 'classnames';\nimport React from 'react';\nimport './App.scss';\nimport CloseButton from 'react-bootstrap/CloseButton';\nimport Button from 'react-bootstrap/Button';\nimport Card from 'react-bootstrap/Card';\n\nconst goodsFromServer: string[] = [\n  'Dumplings',\n  'Carrot',\n  'Eggs',\n  'Ice cream',\n  'Apple',\n  'Bread',\n  'Fish',\n  'Honey',\n  'Jam',\n  'Garlic',\n];\n\nconst delicious:string[] = ['Appetizing', 'Flavorful', 'Fresh', 'Delish', 'Delectable', 'Tasteful', 'Tasty', 'Toothsome', 'Yummy', 'Flavorful'];\n\ntype State = {\n  selectedGoods: string[],\n};\n\nclass App extends React.Component<{}, State> {\n  state = {\n    selectedGoods: ['Jam'],\n  };\n\n  render() {\n    const { selectedGoods } = this.state;\n\n    return (\n      <div className=\"App\">\n        <div className=\"productCards\">\n          {selectedGoods.length\n            ? (\n              <h1 className=\"productCards__cartContent\">\n                {selectedGoods.length > 1\n                  ? `${selectedGoods.slice(0, -1).join(', ')} and ${selectedGoods[selectedGoods.length - 1]} are `\n                  : (`${selectedGoods.join(', ')} is `)}\n\n                selected\n\n              </h1>\n            )\n            : <h1 className=\"productCards__cartContent\">No goods selected</h1>}\n\n          {selectedGoods.length > 0 && (\n            <CloseButton\n              type=\"button\"\n              className={classNames('button', 'button-close')}\n              onClick={() => {\n                this.setState({ selectedGoods: [] });\n              }}\n            />\n          )}\n\n          <p className=\"productCards__amount\">\n            Goods amount:\n            {' '}\n            {selectedGoods.length}\n          </p>\n\n          <div className=\"productCards__products\">\n            {goodsFromServer.map((el, i) => (\n              <Card\n                bg={el}\n                key={el}\n                style={{ width: '18rem' }}\n                className={classNames(\n                  'product',\n                  'mb-2',\n                  { product_selected: selectedGoods.includes(el) },\n                )}\n              >\n                <Card.Body>\n                  <Card.Title>{el}</Card.Title>\n\n                  <Card.Text>\n                    {delicious[i]}\n                    {' '}\n                    {el}\n                  </Card.Text>\n\n                  <Button\n                    variant=\"outline-success\"\n                    className={classNames(\n                      `${el.toLowerCase()}-button`,\n                      'button',\n                      { selected: selectedGoods.includes(el) },\n                    )}\n                    onClick={() => {\n                      if (!selectedGoods.includes(el)) {\n                        this.setState(prevState => (\n                          { selectedGoods: [...prevState.selectedGoods, el] }));\n                      } else {\n                        this.setState(prevState => ({\n                          selectedGoods: [...prevState.selectedGoods].filter(\n                            product => product !== el,\n                          ),\n                        }));\n                      }\n                    }}\n                  >\n                    {!selectedGoods.includes(el)\n                      ? 'Select'\n                      : 'Remove'}\n                  </Button>\n                </Card.Body>\n              </Card>\n            ))}\n          </div>\n        </div>\n      </div>\n    );\n  }\n}\n\nexport default App;\n","import ReactDOM from 'react-dom';\nimport App from './App';\n\nReactDOM.render(\n  <App />,\n  document.getElementById('root'),\n);\n"],"sourceRoot":""}